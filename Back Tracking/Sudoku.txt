bool isSafe(vector<vector<int> > &board, int val,int row,int col)
{
    for(int i=0;i<board[0].size();i++)
    {
        if(board[row][i]==val)
            return false;

        if(board[i][col]==val)
            return false;

        if(board[3*(row/3) + i/3][3*(col/3) + i%3] == val)
            return false;
    }
    return true;
}

bool solve(vector<vector<int> > &board)
{
    int n = board[0].size();

    for(int row = 0;row < n; row++)
    {
        for(int col = 0;col < n; col++)
        {
            if(board[row][col] == 0)
            {
                for(int val = 1;val <= 9; val++)
                {
                    if(isSafe(board,val,row,col))
                    {
                        board[row][col] = va;

                        bool aagePossibleSolution = solve(board);

                        if(aagePossibleSolution)
                            return true;
                        
                        else
                            board[row][col] = 0;
                    }
                }
                return false;
            }
        }
    }
    return true;
}

void solveSudoku(vector<vector<int> > &sudoku)
{
    solve(sudoku);
}