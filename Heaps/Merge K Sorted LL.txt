class compare{
    public:
        bool operator()(Node* a,Node* b)
        {
            return a->data > b->data;
        }
};
Node* mergeLists(vector<Node*> &listArray)
{
    priority_queue<Node*, vector<Node> ,compare> minHeap;
    
    int k = listArray.size();
    if(k == 0)
        return NULL;

    for(int i=0;i<k;i++)
    {
        if(listArray[i])
            minHeap.push(listArray[i]);
    }

    Node* head = NULL;
    Node* tail = NULL;

    while(minHeap.size() > 0)
    {
        Node* tmp = minHeap.top();
        minHeap.pop();

        if(head == NULL)
        {
            head = tmp;
            tail = tmp;
            if(tail->next)
            {
                 minHeap.push(tail->next);
            }
        }
        else
        {
            tail->next = top;
            tail = top;
            if(tail->next)
            {
                minHeap.push(tail->next);
            }
        }
    }
    return head;
}