pair<bool,int> isSumFast(TreeNode* root)
{
    if(root==NULL)
    {
        pair<bool,int>  p = make_pair(true,0);
        return p;
    }

    if(root->left == NULL && root->right == NULL)
    {
        pair<bool,int>  p = make_pair(true,root->data);
        return p;
    }

    pair<bool,int> left = isSumFast(root->left);
    pair<bool,int> right = isSumFast(root->right);

    bool leftAns = left.first;
    bool rightAns = right.first;

    bool con = root->data == left.second + right.second;

    pair<bool,int> ans;
    ans.first = leftAns &&  rightAns && con;
    ans.second = 2*root->data;
    return ans;
} 
bool issum(TreeNode *root) 
{
    return  isSumFast(root).first;
}